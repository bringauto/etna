version: '3'
services:
  mosquitto:
    image: europe-west1-docker.pkg.dev/bringauto-infrastructure/virtual-platform/bringauto-mosquitto:1.1.0
    profiles: ["all", "without-fleet", "without-autonomy", "without-daemon", "mosquitto", "without-http-api", "core"]
    volumes:
      - ./docker_volumes/mosquitto/log:/mosquitto/log
      - ./docker_volumes/mosquitto/data:/mosquitto/data
      - ./configuration/mosquitto:/mosquitto/config/
    ports:
      - 1883:1883
      - 8883:8883
    restart: always
    networks:
      - bring-emulator

  virtual-fleet:
    image:  europe-west1-docker.pkg.dev/bringauto-infrastructure/virtual-platform/virtual-fleet:2.2.0
    profiles: ["all", "without-autonomy", "without-broker", "without-daemon", "without-http-api"]
    volumes:
      - ./docker_volumes/virtual-fleet:/virtual-fleet/log
    entrypoint: ["/virtual-fleet/virtual-fleet-app",
                 "--broker-ip=mosquitto",
                 "--broker-port=1883",
                 "--log-path=/virtual-fleet/log/"]
    restart: always
    networks:
      - bring-emulator

  bringauto-daemon:
    image:  europe-west1-docker.pkg.dev/bringauto-infrastructure/virtual-platform/bringauto-daemon:1.5.0
    profiles: ["all", "without-fleet", "without-autonomy", "without-broker", "without-http-api", "core", "car"]
    volumes:
      - ./docker_volumes/bringauto-daemon:/bringauto-daemon/log
      - ./configuration/daemon:/certificates/
    ports:
      - 1636:1636
    entrypoint: ["/bringauto-daemon/_build/components/industrial_portal/industrial_portal",
                 "--mode=mqtt",
                 "--company=${COMPANY:-bringauto}",
                 "--place=${PLACE:-default}",
                 "--vehicle-name=${VEHICLE_NAME:-BringAuto Virtual}",
                 "--broker-ip=mosquitto",
                 "--broker-port=1883",
                 "--mqtt-ssl=false",
                 "--ca-file=/certificates/ca-chain.pem",
                 "--client-cert=/certificates/client.pem",
                 "--client-key=/certificates/client.key",
                 "--port=1636",
                 "--log-path=/bringauto-daemon/log/"]
    restart: always
    networks:
      - bring-emulator

  virtual-vehicle-utility:
    image: europe-west1-docker.pkg.dev/bringauto-infrastructure/virtual-platform/virtual-vehicle-utility:2.4.0
    profiles: ["all", "without-fleet", "without-broker", "without-daemon", "without-http-api", "car"]
    volumes:
      - ./docker_volumes/virtual-vehicle-utility:/virtual-vehicle-utility/log
    entrypoint: ["/virtual-vehicle-utility/virtual-vehicle-utility",
                 "--map=/virtual-vehicle-utility/maps/Brno.osm",
                 "--verbose",
                 "--daemon-ip=bringauto-daemon",
                 "--daemon-port=1636",
                 "--wait=30",
                 "--log-path=/virtual-vehicle-utility/log/",
                 "--period=1000",
                 "--vehicle-provider=simulation"]
    restart: always
    networks:
      - bring-emulator

  http-api:
    image: bringauto/fleet-protocol-http-api
    profiles: ["all", "without-fleet", "without-autonomy", "without-broker", "without-daemon", "core"]
    ports:
      - 8080:8080
    restart: always
    depends_on:
      - postgresql-database
    networks:
      - bring-emulator

  postgresql-database:
    image: postgres:16
    profiles: ["all", "without-fleet", "without-autonomy", "without-broker", "without-daemon", "core"]
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
    restart: always
    networks:
      - bring-emulator
    ports:
      - 5432:5432
    volumes:
      - ./db/insert_key.sql:/docker-entrypoint-initdb.d/insert_key.sql

networks:
  bring-emulator:
    name: bring-emulator
